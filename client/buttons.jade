template(name='voting')
    i.thumbs.up.link.large.icon.vote_up(class=vote_up_button_class)
    // i.thumbs.down.link.big.icon.vote_down(class=vote_down_button_class)
    // |#{points}

template(name='thanks_button')
    .ui.circular.button.vote_up(class=thanks_button_class)
        i.thumbs.up.icon
        if said_thanks
            |Thanks #{author.profile.first_name}
        else
            | Thank #{author.profile.first_name} for sharing
    // #thanks_modal.ui.small.modal
    //     i.close.icon
    //     .header Send #{author.profile.first_name} an optional private message?
    //     .content
    //         // img.ui.avatar.image(src="{{c.url author.profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
    //         .ui.fluid.input
    //             input#thanks_message_text(type='text')
    //     .actions
    //         .ui.cancel.basic.button
    //             // i.ban.icon
    //             | No Thanks
    //         .ui.teal.approve.labeled.icon.button 
    //             i.send.icon
    //             |Send
    // #message_sent.ui.small.modal
    //     i.close.icon
    //     .header Message sent to #{author.profile.first_name}.
    //     .actions
    //         .ui.green.approve.button 
    //             i.check.icon
    //             |Cool

template(name='reflect_button')
    if currentUser
        #reflect.ui.circular.basic.button
            i.large.icons
                i.talk.outline.icon
                i.corner.share.icon
            |Reflect in Journal
    else
        .ui.circular.basic.disabled.button
            i.large.icons
                i.talk.outline.icon
                i.corner.share.icon
            |Reflect in Journal

template(name='big_both_voter')
    i.thumbs.up.link.huge.icon.vote_up(class=vote_up_button_class)
    i.thumbs.down.link.huge.icon.vote_down(class=vote_down_button_class)
    // |#{points}

template(name='rating')
    .ui.massive.heart.rating(data-rating=question_rating)


template(name='rank')
    .ui.tiny.statistic
        .value #{rank_doc}
        .label Rank
    #increase_index.ui.icon.basic.circular.button
        i.chevron.up.icon
    // #decrease_index.ui.icon.basic.circular.button
    //     i.chevron.down.icon





template(name='toggle_friend')
    if currentUser
        if is_friend
            #remove_friend.ui.basic.button
                i.minus.red.icon
                |Unfriend
        else
            #add_friend.ui.basic.button
                i.plus.green.icon
                |Friend



template(name='session_edit_button')
    if currentUser
        unless is_editing
            .edit_this.ui.icon.basic.button(title="Edit #{tags}" class=button_classes)
                i.pencil.icon
        else
            .save_doc.ui.green.button(class=button_classes)
                i.check.icon
                |Save
template(name='session_edit_icon')
    if currentUser
        unless is_editing
            i.red.pencil.link.icon.edit_this(title=tags class=button_classes)
        else
            .save_doc.ui.green.button(class=button_classes)
                i.red.check.icon
                |Save
template(name='edit_button')
    if currentUser
        unless editing
            .edit_this.ui.basic.button(title=tags)
                i.red.pencil.icon
                |Edit
        else
            .save_doc.ui.green.button
                i.red.check.icon
                |Save
                
template(name='edit_icon')
    if currentUser
        unless editing
            i.edit_this.large.pencil.link.icon(title=tags)
        else
            .save_doc.ui.icon.green.basic.button
                i.check.icon

template(name='edit_link')
    if currentUser
        unless editing
            a.edit_this(href='#') Edit
        else
            .save_doc.ui.basic.large.button
                i.green.check.icon
                |Save

template(name='add_to_cart')
    unless added
        #add_to_cart.ui.fluid.teal.button
            i.large.icons
                i.add.to.cart.icon
                i.corner.green.plus.icon
            |Add to Cart
    else
        .ui.fluid.labeled.basic.button
            #remove_from_cart.ui.basic.teal.button
                i.large.icons
                    i.add.to.cart.icon
                    i.corner.red.minus.icon
                |Remove from Cart
            a.ui.basic.right.pointing.label(href='/cart')
                |View Cart
        

template(name='delete_button')
    unless confirming
        .delete.ui.icon.red.basic.button
            i.remove.icon
    else
        a.cancel(href='#') Cancel
        a.confirm(href='#') Confirm Delete
        
template(name='delete_link')
    span.link_area
        unless confirming
            a.delete(href='#') Delete
        else
            a.cancel(href='#') 
                i.ban.icon
                |Cancel
            a.confirm(href='#') 
                i.red.trash.icon
                |Confirm Delete
        

template(name='published')
    .ui.dividing.header Visibility
    if published
        .ui.large.green.label
            i.unlock.icon
            |Public
        if can_edit
            #unpublish.ui.icon.basic.button
                // i.toggle.on.green.icon
                i.lock.icon
                // | Make Private
    else
        .ui.large.basic.label
            i.lock.icon
            | Private
        if can_edit
            #publish.ui.icon.basic.button
                i.unlock.icon
                // | Make Public






template(name='featured')
    .field
        if featured
            #make_unfeatured.ui.basic.icon.button
                i.toggle.on.icon
        else
            #make_featured.ui.basic.icon.button
                i.toggle.off.icon
        if featured
            .ui.green.basic.label Featured
        else
            .ui.basic.label Unfeatured

template(name='favorite_button')
    i.heart.large.link.icon.favorite_item(class=favorite_item_class)
    if favorite_count
        | #{favorite_count}

template(name='mark_complete_button')
    .mark_complete.ui.circular.button(class=complete_button_class) 
        if completed
            i.checkmark.box.icon
            | Completed
        else
            i.square.outline.icon
            | Mark Complete
        
template(name='mark_doc_complete_button')
    .mark_complete.ui.circular.button(class=complete_button_class) 
        if complete
            i.checkmark.box.icon
            | Completed
        else
            i.square.outline.icon
            | Complete
        
template(name='bookmark_button')
    .bookmark_button.ui.circular.button(class=bookmark_button_class) 
        if bookmarked
            i.bookmark.icon
            | Bookmarked
        else
            i.bookmark.icon
            | Bookmark
        
        
template(name='pin_button')
    .pin_button.ui.circular.icon.button(class=pin_button_class title='Pin this') 
        if pinned
            i.pin.icon
            // | Pinned
        else
            i.pin.icon
            // | Pin
        
        
template(name='pin_corner_button')
    a.pin_button.ui.corner.link.label(class=pin_button_class title='Pin this') 
        i.pin.icon
        
template(name='view_full_button')
    a.ui.basic.button(href="/view/#{_id}")
        |Full
        i.right.chevron.icon

template(name='edit_link_button')
    if can_edit
        // +call_watson
        a.ui.basic.button(href="/edit/#{_id}")
            i.pencil.icon
            |Edit


template(name='add_doc_button')
    #add_doc.ui.basic.fluid.button
        i.green.plus.icon
        | #{add_button_text}


template(name='subscribe_button')
    if is_participant
        #subscribe_button.ui.button(class=subscribe_buton_class)
            if subscribed
                i.check.icon
                | Subscribed
            else
                i.square.outline.icon
                |Not Subscribed
                
                
template(name='toggle_zen_mode_button')
    if zen_mode
        #turn_off_zen_mode.ui.basic.button
            i.red.fire.icon
            |Turn Off Zen Mode
    else
        #turn_on_zen_mode.ui.basic.button
            i.fire.icon
            |Turn On Zen Mode
        