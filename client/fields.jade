template(name='field_type') 
    if editing
        .ui.labeled.fluid.input
            .ui.basic.label Field Type
            input#field_type(type='text' value=field_type)
    else
        | Field Type: #{field_type}


template(name='title') 
    if editing
        .ui.labeled.fluid.input
            .ui.basic.label Title
            input#title(type='text' value=title)
    // else
    //     // h2.ui.header 
    //         // if icon_class
    //         //     +icon48 name=icon_class classes='ui mini inline image'
    //     |#{title}

template(name='subtitle')
    if editing
        .ui.labeled.fluid.input
            .ui.basic.label Subtitle
            input#subtitle(type='text' value=subtitle)
    else
        h3.ui.center.aligned.header #{subtitle}

template(name='group')
    if editing
        .ui.labeled.fluid.input
            .ui.basic.label Group
            input#group(type='text' value=group)


template(name='template_name')
    .inline.field
        label Template Name
        input#template_name(type='text' value=template_name)

template(name='icon_class')
    if editing
        .ui.labeled.input
            a.ui.basic.label(href="https://icons8.com/icon/new-icons/color" target='_blank' data-tooltip="Lookup at icons8")
                |Icon 
            input#icon_class(type='text' value=icon_class)
        if icon_class    
            +icon96 name=icon_class classes='ui inline image'

template(name='created_date')
    .ui.form
        .inline.field
            label Created Date
            input#created_date(type='datetime-local' value=created_date)

template(name='plain')
    .field
        input#plain(type='text' value=plain)


template(name='slug')
    if editing
        .ui.labeled.input
            .ui.basic.label Slug
            input#slug(type='text' value=slug)

template(name='plural_slug')
    .ui.labeled.input
        .ui.basic.label Plural Slug
        input#plural_slug(type='text' value=plural_slug)

template(name='number')
    if editing
        .ui.labeled.input
            .ui.basic.label Number
            input#number(type='number' min='0' value=number)

template(name='edit_quantity')
    if editing
        .ui.labeled.input
            .ui.basic.label Quantity (0 for infinite)
            input#quantity(type='number' min='0' value=quantity)
    else
        .ui.header Quantity: #{quantity}

template(name='text')
    if editing
        .ui.form
            .field
                textarea#text(rows='3') #{text}
    else
        .ui.basic.segment
            |#{text}
            
            
template(name='tags')
    // .ui.segment
    if editing
        .ui.header
            +icon48 name='hashtag' classes='ui mini spaced image'
            |Tags &nbsp;
            .ui.mini.input
                // i.plus.icon
                input#theme_tag_select(type='text' placeholder='Add...' maxlength='50' )
            // .ui.mini.input
            //     +inputAutocomplete settings=theme_select_settings id="theme_tag_select" class="" autocomplete="off"
            each tags
                // a.ui.basic.circular.button.doc_tag #{this}
                a.ui.basic.circular.button.doc_tag
                    i.remove.icon
                    |#{this}
    else
        // .ui.dividing.header
        //     +icon48 name='hashtag' classes='ui inline mini image'
        //     |Tags
        +icon48 name='hashtag' classes='ui inline mini image'
        each tags
            .ui.basic.label #{this}

            

template(name='location_tags')
    if editing
        .ui.header 
            +icon48 name='sofa' classes='ui mini spaced image'
            |Location Tags &nbsp;
            // .ui.mini.input
            //     +inputAutocomplete settings=location_select_settings id="location_tag_select" class="" autocomplete="off"
            .ui.mini.input
                input#location_tag_select(type='text' placeholder="eg. 'home', 'couch'" maxlength='50' )
            each location_tags
                // a.ui.basic.circular.button.doc_tag #{this}
                a.ui.basic.circular.button.doc_tag
                    i.remove.icon
                    |#{this}
    else if is_editing
        .ui.header 
            +icon48 name='sofa' classes='ui mini spaced image'
            |Location Tags &nbsp;
            .ui.mini.input
                +inputAutocomplete settings=location_select_settings id="location_tag_select" class="" autocomplete="off"
            // .ui.mini.input
            //     input#add_location_tag(type='text' placeholder="eg. 'home', 'couch'" maxlength='50' )
            each location_tags
                // a.ui.basic.circular.button.doc_tag #{this}
                a.ui.basic.circular.button.doc_tag
                    i.remove.icon
                    |#{this}
    else
        .ui.dividing.header 
            +icon48 name='sofa' classes='ui mini inline image'
            |Location Tags
        each location_tags
            .ui.basic.large.label.location_tag #{this}


template(name='intention_tags')
    if editing
        .ui.header 
            +icon48 name='spotlight' classes='ui mini spaced image'
            |My intention for this entry is to... &nbsp;
            // .ui.mini.input
            //     +inputAutocomplete settings=intention_select_settings id="intention_tag_select" class="" autocomplete="off"
            .ui.mini.input
                input#intention_tag_select(type='text' maxlength='50' )
            each intention_tags
                // a.ui.basic.circular.button.doc_tag #{this}
                a.ui.basic.circular.button.doc_tag
                    i.remove.icon
                    |#{this}
    else
        .ui.dividing.header 
            +icon48 name='sofa' classes='ui mini inline image'
            |Intention Tags
        each intention_tags
            .ui.basic.large.label.intention_tag #{this}


template(name='dollar_price')
    if editing
        .ui.labeled.input
            .ui.basic.label $ Price
            input#dollar_price(type='number' min='0' value=dollar_price)
    else
        .ui.header Price $#{dollar_price}


template(name='point_price')
    .ui.labeled.input
        .ui.basic.label Point Price
        input#point_price(type='number' min='0' value=point_price)

template(name='bounty')
    if editing
        .ui.labeled.input
            .ui.basic.label Bounty
            input#bounty(type='number' min='0' value=bounty)
            .ui.basic.label pts
    else
        .ui.header Offer: #{bounty}


template(name='link')
    if editing
        .ui.labeled.icon.input
            .ui.basic.label Link (include http://)
            // i.linkify.icon
            input#link(type='text' value=link)
            +remove_field field='link'
    else
        a(href=link) #{link}

template(name='page_name')
    .field
        label Page Name
        .ui.input
            input#name(type='text' value=name)


template(name='type')
    .ui.labeled.fluid.input
        .ui.basic.label Type
        input#type(type='text' value=type)
            
template(name='author_name')
    if editing
        .ui.labeled.fluid.large.input
            .ui.basic.label Author
            input#author_name(type='text' value=author_name)
    else
        .ui.header Author: #{author_name}


template(name='edit_parent_id')
    .ui.form
        .inline.field
            label ParentID
            input#parent_id(type='text' value=parent_id)

template(name='location')
    .field
        label Location
        .ui.left.icon.input
            +icon48 name='geo-fence'
            input#location(type='text' value=location)

template(name='content')
    if editing
        .field
            label #{label}
            .froala-container
                +froalaReactive getFEContext
    else
        .ui.basic.segment
            .large130 !{content}
    
template(name='image_id')
    if editing
        .ui.segment
            if image_id
                .ui.header
                     +icon48 name='image-file' classes='ui mini spaced image'
                     |Uploaded Image
                .ui.large.centered.image
                    img(src="{{c.url image_id width=500 crop='fit'}}")
                    a#remove_photo.ui.top.right.attached.link.red.basic.label
                        +icon48 name='delete' classes='ui tiny spaced image'
                    if isInRole 'dev'
                        .ui.bottom.right.attached.blue.label Image Id: #{image_id}
            else
                .ui.labeled.fluid.input
                    .ui.basic.label
                        +icon48 name='add-image' classes='ui tiny spaced image'
                        |Upload Image
                    input(type='file' name='upload_picture' accept='image/*')
                // if isInRole 'dev'
                //     .ui.header or Choose Cloudinary Image Id
                //     .ui.input
                //         input#input_image_id(type='text')
    else
        img.ui.centered.image(src="{{c.url image_id width=500 crop='fit'}}")
        

template(name='image_url')
    if editing
        if image_url
            label Image URL
            .ui.image
                img(src=image_url)
                a#remove_image_url.ui.top.left.attached.link.blue.label Remove
            .ui.label Image URL: #{image_url}
        else
            .ui.labeled.icon.action.fluid.input
                .ui.basic.label 
                    +icon48 name='add-link' classes='ui mini spaced image'
                    |Paste Image URL
                input#image_url(type='text' value=image_url)
                .ui.basic.button
                    +icon24 name='sent'
    // else
    //     .ui.large.image
    //         img(src=image_url)
        
    
template(name='youtube')
    if editing
        .ui.segment
            .ui.action.fluid.labeled.input
                .ui.basic.label
                    +icon48 name='youtube' classes='ui mini spaced image'
                    |Youtube Id
                input#youtube(type='text' value=youtube)
                .ui.icon.basic.button#clear_youtube
                    +icon24 name='delete'
            if youtube
                .ui.embed(data-source="youtube" data-id=youtube)
    else
        // .ui.embed(data-source="youtube" data-id=youtube data-icon="video" data-placeholder="/images/video_placeholder.png")
        if youtube
            .ui.embed(data-source="youtube" data-id=youtube)


template(name='participants')
    .field
        label Participants: 
        each participants
            .ui.large.basic.label
                img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                |#{username}
                #remove_participant.ui.icon.basic.small.compact.circular.button
                    i.red.remove.icon
        .ui.left.icon.large.input
            i.search.icon
            +inputAutocomplete settings=participants_edit_settings id="participant_select" class="" autocomplete="off" placeholder='Search Username...'
            
            
template(name='edit_author')
    .ui.labeled.input
        .ui.basic.label 
            |Author: 
            with author
                img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                |#{username}
        +inputAutocomplete settings=author_edit_settings id="author_select" class="" autocomplete="off" placeholder='Lookup...'
                    
                    
template(name='edit_recipient')
    .ui.labeled.input
        .ui.basic.label 
            |Recipient: 
            with recipient
                img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                |#{username}
        +inputAutocomplete settings=recipient_select_settings id="recipient_select" class="" autocomplete="off" placeholder='Lookup...'
                    
template(name='start_date')
    .ui.labeled.input
        .ui.basic.label Start Date
        input#start_date(type='date' value=start_date)

template(name='start_time')
    .ui.labeled.input
        .ui.basic.label Start Time
        input#start_time(type='time' value=start_time)
            
template(name='time_marker')
    .ui.labeled.input
        .ui.basic.label Time Marker
        input#time_marker(type='number' value=time_marker step="0.01" min="0")
            
template(name='end_date')
    if editing
        .ui.labeled.input
            .ui.basic.label End Date/Time
            input#end_date(type='date' value=end_date)
    else
        .ui.header End Date #{end_date}
        
        
template(name='remove_field')
    .remove_field.ui.basic.icon.button
        i.remove.red.icon
        
        
        
// template(name='child_view')
//     .ui.labeled.fluid.input
//         .ui.basic.label Child Type
//         input#child_type(type='text' value=child_type)
//     if card_view
//         .ui.cards
//             each typed_children
//                 .ui.card
//                     .content
//                         a.header(href="/view/#{_id}") #{title}
                        
                        
                        
template(name='transcript')
    if editing
        .ui.header 
            +icon48 name="paper" classes='ui mini inline image'
            |Transcript
        .froala-container
            +froalaReactive transcript_context
    else
        .ui.styled.fluid.accordion
            h3.title
                +icon96 name="paper" classes='ui mini inline image'
                | Transcript
                i.dropdown.icon
            .content
                |!{transcript}
                // if isInRole 'dev'
                //     |old
                // +doc_by_parentid_and_type parent_id=_id type='transcript'
                // +doc_content tags='sol,welcome,transcript'
    .ui.hidden.divider