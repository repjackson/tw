template(name='resonate_button')
    .resonate_button.ui.circular.button(class=resonate_button_class) 
        // i.big.red.heartbeat.icon
        // <img src="https://png.icons8.com/heart-with-pulse/dusk/64" title="Heart with Pulse" width="64" height="64">        
        img.ui.avatar.image(src="https://png.icons8.com/heart-with-pulse/dusk/64" width="64" height="64")
        | This Resonates with Me
        

template(name='resonates_list')
    if resonates_with_people.count
        .ui.segment
            .ui.dividing.header
                |This Resonates With... (#{resonates_with_people.count})
            .ui.divided.list
                each resonates_with_people
                    .item
                        img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                        .content
                            .header
                                |#{name}
                            .description
                                +tiny_color_dots
                                // each five_tags
                                //     .ui.basic.label #{this}


template(name='toggle_doc_read')
    // if read
    //     .mark_unread.ui.basic.button 
    //         +icon48 name='read-message' classes='avatar'
    //         |Mark Unread
    // else
    if currentUser
        unless read
            .mark_read.ui.basic.button 
                +icon48 name='message' classes='avatar'
                |Mark Read

template(name='read_by')
    // if read_by.count
    .ui.segment
        .ui.dividing.header
            |Read by... 
            span.floated.right (#{read_by.count})
        .ui.divided.list
            each read_by
                .item
                    img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                    .content
                        .header
                            |#{name}
                        .description
                            +tiny_color_dots
                            // each five_tags
                            //     .ui.basic.label #{this}


template(name='doc_matches')
    .ui.fluid.styled.accordion
        .title 
            +icon48 name='query-inner-join' classes='avatar'
            |Top Doc Matches (#{top_doc_matches.length})
            i.dropdown.icon
            if currentUser
                #compute_doc_matches.ui.icon.basic.button(data-content='Compute Matches')
                    i.refresh.icon
        .content.match_content
            if top_doc_matches
                .ui.relaxed.divided.items
                    each top_doc_matches
                        +doc_match
                        
                        
                                        
template(name='doc_match')                    
    .item 
        .content
            .description
                +icon48 name='query-outer-join' classes='avatar'
                |Intersection Tags (#{intersection_tags_count})
                each intersection_tags
                    .ui.basic.label #{this}
            .description
                +icon48 name='tags' classes='avatar'
                | Document Tags
                each tags
                    .ui.small.basic.label #{this}
            // .description
            //     |#{match_doc.type} entry by
            //     img.ui.avatar.image(src="{{c.url match_doc.author.profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
            //     | #{match_doc.author.name}
            .title
                i.dropdown.icon
                |Content 
            .content
                |!{match_doc.content}
            .extra
                +view_full_button   
                
                
template(name='service_buttons')
    .ui.dividing.header Services
    +request_tori_feedback
    +call_watson
                        
                        
template(name='request_tori_feedback')
    // .ui.dividing.header 
    //     i.comments.outline.icon
    //     |Request Feedback
    if feedback_requested
        .ui.header
            +icon48 name='feedback' classes='avatar'
            | Feedback Requested 
            |Status: Pending
        #cancel_request.ui.fluid.basic.button
            i.cancel.icon
            | Cancel Request
    else
        #request_feedback.ui.fluid.basic.button
            +icon48 name='feedback' classes='avatar'
            | Request Tori's Feedback
            
                
template(name='parent_doc_segment')
    if parent_id
        .ui.styled.fluid.accordion
            .title
                +icon48 name='response' classes='avatar'
                |In response to...
                i.dropdown.icon
            .content
                with parent
                    |!{content}
                    // .ui.horizontal.divided.list
                    //     .item
                    //         img.ui.avatar.image(src="{{c.url author.profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                    //         |by #{author.name}
                    //     .item
                    //         |Type:
                    //         .ui.basic.label #{type}
                    // .ui.divider
                    // img.ui.avatar.image(src="https://png.icons8.com/tags/color/48" width="48" height="48")
                    // each tags
                    //     .ui.basic.small.label #{this}
                    .ui.basic.segment
                        +view_full_button
                    .ui.basic.segment
                    


template(name='view_published_toggle')
    if viewing_mine
        #view_all_entries.ui.basic.fluid.button
            img.ui.avatar.image(src="{{c.url currentUser.profile.image_id width=50 height=50 gravity='face' crop='fill'}}")
            |Viewing Mine (Public and Private)
    if viewing_all
        #view_my_entries.ui.basic.fluid.button 
            +icon48 name='people' classes='avatar'
            |Viewing All Public

template(name='view_read_toggle')
    if viewing_unread
        #view_all.ui.basic.fluid.button
            +icon48 name='read-message' classes='avatar'
            |Viewiing Unread
    if viewing_all
        #view_unread.ui.basic.fluid.button 
            +icon48 name='message' classes='avatar'
            |Viewing Read and Unread

template(name='stripe_cc_form')
    #card_element
    
template(name='icon48')
    img.ui.image(src="https://png.icons8.com/#{name}/color/48" width="48" height="48" class=classes title=title)
template(name='icon24')
    img(src="https://png.icons8.com/#{name}/color/24" width="24" height="24" title=title)
template(name='icon96')
    img(src="https://png.icons8.com/#{name}/color/96" width="96" height="96" title=title)
